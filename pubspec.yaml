name: quotanic
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.6.0

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  flutter_localizations:
    sdk: flutter
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  #it helps developers build Flutter applications that can adapt to different languages and regions, providing a tailored user experience for a global audience
  intl: ^0.19.0
  #Sizer (Responsive UI solution for Mobile App,Web and Desktop)
  sizer: ^3.0.5
  #it easy to implement the BLoC (Business Logic Component) design pattern. Built to be used with the bloc state management package.
  flutter_bloc: ^8.1.5
  #A predictable state management library that helps implement the BLoC (Business Logic Component) design pattern.
  bloc: ^8.1.4
  #  A Flutter package to use fonts from fonts.google.com.
  google_fonts: ^6.2.1
  #Accessing service objects like REST API clients or databases so that they easily can be mocked.
  #Accessing View/AppModels/Managers/BLoCs from Flutter Views
  get_it: ^7.6.7
  #Persistent key/value storage for Android, iOS, Web, Linux, Mac and Fuchsia and Windows, that combines fast memory access with persistent storage.
  get_storage: ^2.1.1
  #Being able to compare objects in Dart often involves having to override the == operator as well as hashCode.
  equatable: ^2.0.5
  #Defines the annotations used by json_serializable to create code for JSON serialization and deserialization.
  json_annotation: ^4.8.1
  #This package does nothing without freezed.
  freezed_annotation: ^2.4.1
  #code generator for data classes, tagged unions, nested classes and cloning.
  freezed: ^2.4.7
  #A powerful HTTP networking package for Dart/Flutter, supports Global configuration, Interceptors, FormData, Request cancellation, File uploading/downloading, Timeout, Custom adapters, Transformers, etc.
  dio: ^5.7.0
  #Pretty Dio logger is a Dio interceptor that logs network calls in a pretty, easy to read format.
  pretty_dio_logger: ^1.4.0
  #Get current device information from within the Flutter application.
  device_info_plus: ^11.2.0
  #This Flutter plugin provides an API for querying information about an application package.
  package_info_plus: ^8.3.0
  #This plugin allows Flutter apps to discover network connectivity types that can be used.
  connectivity_plus: ^6.1.3
  #Basic usage (to create an SVG rendering widget from an asset):
  flutter_svg: ^2.0.16
  #Allows send emails from flutter using native platform functionality.
  flutter_email_sender: ^7.0.0
  #A flutter library to show images from the internet and keep them in the cache directory.
  cached_network_image: ^3.3.1
  #Flutter's core Dropdown Button widget with steady dropdown menu and many other options you can customize to your needs.
  dropdown_button2: ^2.3.9
  #This package provides the IANA time zone database and time zone aware DateTime class, TZDateTime.
  timezone: ^0.10.0
  #Use this package if you need more customization when notifying your user.
  another_flushbar: ^1.12.30
  #A Flutter plugin for launching a URL.
  url_launcher: ^6.3.1
  #A package that allows you to use the native file explorer to pick single or multiple files, with extensions filtering support.
  file_picker: ^9.2.1
  #A package provides an easy way to add shimmer effect in Flutter project
  shimmer: ^3.0.0
  #A modern google style nav bar for flutter.
  google_nav_bar: ^5.0.7





dev_dependencies:
  flutter_test:
    sdk: flutter

  #https://pub.dev/packages/your-package-name

  flutter_localizations:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^5.0.0
  #The build_runner package provides a concrete way of generating files using Dart code. Files are always generated directly on disk, and rebuilds are incremental - inspired by tools such as Bazel.
  #dart run build_runner build
  build_runner: ^2.4.8
  #The builders generate code when they find members annotated with classes defined in package:json_annotation.
  json_serializable: ^6.7.1
  #Change App Package Name with single command. It makes the process very easy and fast.
  #dart run change_app_package_name:main com.new.package.name
  change_app_package_name: ^1.5.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  assets:
    - assets/
    - assets/images/
    - assets/svgs/
  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
flutter_intl:
  enabled: true
